version 1

snippet dropt
	begin
	  ZAdmin.Deploy_Support.rb\$_DropTable( 'rb\$_`substitute(Filename(), '^\\([A-Za-z]\\+\\)-\\([0-9]\\+\\).*', '\\1_\\2', 'g')`_${1}' );
	end;
	/

snippet dropts_old
	declare
	  Table_Not_Exists exception;
	  pragma exception_init( Table_Not_Exists, -00942 );
	  --
	  procedure Drop_Table( p_TableName in varchar2 ) is
	  begin
	    execute immediate 'drop table ' || p_TableName;
	  exception
	    when Table_Not_Exists then
	      null;
	  end;
	begin
	  Drop_Table( 'rb\$_`substitute(Filename(), '^\\([A-Za-z]\\+\\)-\\([0-9]\\+\\).*', '\\1_\\2', 'g')`_${1}' );
	end;
	/

snippet dropt_old
	declare
	  Table_Not_Exists exception;
	  pragma exception_init( Table_Not_Exists, -00942 );
	begin
	  execute immediate 'drop table rb\$_`substitute(Filename(), '^\\([A-Za-z]\\+\\)-\\([0-9]\\+\\).*', '\\1_\\2', 'g')`_${1}';
	exception
	  when Table_Not_Exists then
	    null;
	end;
	/

snippet rbtab
	create table rb\$_`substitute(Filename(), '^\\([A-Za-z]\\+\\)-\\([0-9]\\+\\).*', '\\1_\\2', 'g')`_${1} as
	  select ${2}.*
	    from ${1:table} ${2:alias}
	   where $0

snippet aro
	if GetBuzmeParameter( 'read_only_mode' ) != 0
	then
	  return;
	end if;

snippet anro
	if GetBuzmeParameter( 'read_only_mode' ) = 0
	then
	  $0
	end if;

snippet bro
	if Get_BDB_Parameter( 'read_only_mode' ) != '0'
	then
	  return;
	end if;

snippet broo
	if Get_BDB_Parameter( 'read_only_mode' ) != '0'
	then
	  DBMS_Output.Put_Line( 'Skip data modifications on RO unit' );
	  return;
	end if;

snippet cro
	if CDB_Part.IsTableReadonly( '${0:table}' ) != 0
	then
	  return;
	end if;

snippet cnro
	if CDB_Part.IsTableReadonly( '${1:table}' ) != 0
	then
	  $0
	end if;

snippet cgro
	if CDB_Part.IsGroupReadonly( '${0:table}' ) != 0
	then
	  return;
	end if;

snippet cgnro
	if CDB_Part.IsGroupReadonly( '${1:table}' ) != 0
	then
	  $0
	end if;

snippet br
	--
	-- ---------------------------------------------------------------------------
	--

snippet userfilter
	join Users u
	  on u.UserID       = ${0:alias}.UserID
	 and u.PrivilegeID != 2 -- Not moved
	join UserPODUnits upu
	  on upu.PODUnitID = u.PODUnitID
	 and upu.PODID     = UserPart.GetPODID
	 and upu.UnitID    = UserPart.GetUnitID

snippet be
	begin
	  $0
	end;
	/

snippet dbe
	declare
	  $1
	begin
	  $0
	end;
	/

snippet mers
	merge into Services tgt
	  using (
	    $0
	  ) ${1:alias}
	  on ( tgt.Parameter    = ${1}.Parameter
	   and tgt.BrandID      = ${1}.BrandID
	   and tgt.ServiceLevel = ${1}.ServiceLevel )
	when matched then
	  update
	     set tgt.Value  = ${1}.Value
	   where tgt.Value != ${1}.Value;

snippet print
	DBMS_Output.Put_Line( '$0' );
